<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="19" total="35" passed="16">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="398" started-at="2018-05-25T07:33:47Z" finished-at="2018-05-25T07:33:47Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="398" started-at="2018-05-25T07:33:47Z" finished-at="2018-05-25T07:33:47Z">
      <class name="com.model.dao.implementation.UserDAOImplTest">
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.UserDAOImplTest@7946e1f4]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="1" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.UserDAOImplTest.testDeleteUser()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="PASS" signature="unitilsBeforeClass()[pri:0, instance:com.model.dao.implementation.UserDAOImplTest@7946e1f4]" name="unitilsBeforeClass" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeClass -->
        <test-method status="PASS" signature="testDeleteUser()[pri:0, instance:com.model.dao.implementation.UserDAOImplTest@7946e1f4]" name="testDeleteUser" duration-ms="4" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteUser -->
        <test-method status="PASS" signature="testGetAllUsers()[pri:0, instance:com.model.dao.implementation.UserDAOImplTest@7946e1f4]" name="testGetAllUsers" duration-ms="1" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllUsers -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.UserDAOImplTest@7946e1f4]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.UserDAOImplTest.testDeleteUser()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.UserDAOImplTest@7946e1f4]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.UserDAOImplTest.testGetAllUsers()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.UserDAOImplTest@7946e1f4]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="1" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.UserDAOImplTest.testGetAllUsers()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
        <test-method status="FAIL" signature="testGetUser()[pri:0, instance:com.model.dao.implementation.UserDAOImplTest@7946e1f4]" name="testGetUser" duration-ms="1" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected object to not be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected object to not be null
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.assertNotNull(Assert.java:404)
	at org.testng.Assert.assertNotNull(Assert.java:389)
	at com.model.dao.implementation.UserDAOImplTest.testGetUser(UserDAOImplTest.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.unitils.UnitilsTestNG.run(UnitilsTestNG.java:103)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:652)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:352)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:347)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUser -->
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.UserDAOImplTest@7946e1f4]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.UserDAOImplTest.testGetUser()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="PASS" signature="testGetUsers()[pri:0, instance:com.model.dao.implementation.UserDAOImplTest@7946e1f4]" name="testGetUsers" duration-ms="1" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUsers -->
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.UserDAOImplTest@7946e1f4]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.UserDAOImplTest.testGetUsers()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.UserDAOImplTest@7946e1f4]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.UserDAOImplTest.testGetUser()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.UserDAOImplTest@7946e1f4]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.UserDAOImplTest.testGetUsers()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
      </class> <!-- com.model.dao.implementation.UserDAOImplTest -->
      <class name="com.model.dao.implementation.AdminDAOImplTest">
        <test-method status="PASS" signature="init()[pri:0, instance:com.model.dao.implementation.AdminDAOImplTest@61a485d2]" name="init" is-config="true" duration-ms="71" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.model.dao.implementation.AssignmentDAOImplTest@59e84876]" name="init" is-config="true" duration-ms="12" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.model.dao.implementation.CourseDAOImplTest@234bef66]" name="init" is-config="true" duration-ms="12" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.model.dao.implementation.MailDAOImplTest@b97c004]" name="init" is-config="true" duration-ms="12" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.model.dao.implementation.SpecializationDAOImplTest@6276ae34]" name="init" is-config="true" duration-ms="20" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.model.dao.implementation.StudentDAOImplTest@39fb3ab6]" name="init" is-config="true" duration-ms="15" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.model.dao.implementation.TeacherDAOImplTest@337d0578]" name="init" is-config="true" duration-ms="12" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.model.dao.implementation.UserDAOImplTest@7946e1f4]" name="init" is-config="true" duration-ms="11" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="FAIL" signature="testGetAdmin()[pri:0, instance:com.model.dao.implementation.AdminDAOImplTest@61a485d2]" name="testGetAdmin" duration-ms="1" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [adminExternalEmail] but found [newExternalEmail]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [adminExternalEmail] but found [newExternalEmail]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:176)
	at org.testng.Assert.assertEquals(Assert.java:186)
	at com.model.dao.implementation.AdminDAOImplTest.testGetAdmin(AdminDAOImplTest.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.unitils.UnitilsTestNG.run(UnitilsTestNG.java:103)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:652)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:352)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:347)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAdmin -->
        <test-method status="PASS" signature="unitilsBeforeClass()[pri:0, instance:com.model.dao.implementation.AdminDAOImplTest@61a485d2]" name="unitilsBeforeClass" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeClass -->
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.AdminDAOImplTest@61a485d2]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.AdminDAOImplTest.testGetAdmin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.AdminDAOImplTest@61a485d2]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.AdminDAOImplTest.testGetAdmin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
        <test-method status="PASS" signature="testUpdate()[pri:0, instance:com.model.dao.implementation.AdminDAOImplTest@61a485d2]" name="testUpdate" duration-ms="3" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdate -->
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.AdminDAOImplTest@61a485d2]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.AdminDAOImplTest.testUpdate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.AdminDAOImplTest@61a485d2]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.AdminDAOImplTest.testUpdate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
        <test-method status="PASS" signature="destory()[pri:0, instance:com.model.dao.implementation.AdminDAOImplTest@61a485d2]" name="destory" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destory -->
        <test-method status="PASS" signature="destory()[pri:0, instance:com.model.dao.implementation.AssignmentDAOImplTest@59e84876]" name="destory" is-config="true" duration-ms="1" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destory -->
        <test-method status="PASS" signature="destory()[pri:0, instance:com.model.dao.implementation.CourseDAOImplTest@234bef66]" name="destory" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destory -->
        <test-method status="PASS" signature="destory()[pri:0, instance:com.model.dao.implementation.MailDAOImplTest@b97c004]" name="destory" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destory -->
        <test-method status="PASS" signature="destory()[pri:0, instance:com.model.dao.implementation.StudentDAOImplTest@39fb3ab6]" name="destory" is-config="true" duration-ms="1" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destory -->
        <test-method status="PASS" signature="destory()[pri:0, instance:com.model.dao.implementation.SpecializationDAOImplTest@6276ae34]" name="destory" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destory -->
        <test-method status="PASS" signature="destory()[pri:0, instance:com.model.dao.implementation.TeacherDAOImplTest@337d0578]" name="destory" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destory -->
        <test-method status="PASS" signature="destory()[pri:0, instance:com.model.dao.implementation.UserDAOImplTest@7946e1f4]" name="destory" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destory -->
      </class> <!-- com.model.dao.implementation.AdminDAOImplTest -->
      <class name="com.model.dao.implementation.TeacherDAOImplTest">
        <test-method status="PASS" signature="unitilsBeforeClass()[pri:0, instance:com.model.dao.implementation.TeacherDAOImplTest@337d0578]" name="unitilsBeforeClass" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeClass -->
        <test-method status="FAIL" signature="testDelete()[pri:0, instance:com.model.dao.implementation.TeacherDAOImplTest@337d0578]" name="testDelete" duration-ms="4" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [null] but found [null null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [null] but found [null null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotSame(Assert.java:490)
	at org.testng.Assert.assertNull(Assert.java:426)
	at org.testng.Assert.assertNull(Assert.java:415)
	at com.model.dao.implementation.TeacherDAOImplTest.testDelete(TeacherDAOImplTest.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.unitils.UnitilsTestNG.run(UnitilsTestNG.java:103)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:652)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:352)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:347)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelete -->
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.TeacherDAOImplTest@337d0578]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.TeacherDAOImplTest.testDelete()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.TeacherDAOImplTest@337d0578]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="1" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.TeacherDAOImplTest.testDelete()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
        <test-method status="PASS" signature="testGetAllteachers()[pri:0, instance:com.model.dao.implementation.TeacherDAOImplTest@337d0578]" name="testGetAllteachers" duration-ms="1" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllteachers -->
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.TeacherDAOImplTest@337d0578]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.TeacherDAOImplTest.testGetAllteachers()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.TeacherDAOImplTest@337d0578]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="1" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.TeacherDAOImplTest.testGetAllteachers()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
        <test-method status="PASS" signature="testGetTeacher()[pri:0, instance:com.model.dao.implementation.TeacherDAOImplTest@337d0578]" name="testGetTeacher" duration-ms="2" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTeacher -->
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.TeacherDAOImplTest@337d0578]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.TeacherDAOImplTest.testGetTeacher()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.TeacherDAOImplTest@337d0578]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.TeacherDAOImplTest.testGetTeacherFor()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.TeacherDAOImplTest@337d0578]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.TeacherDAOImplTest.testGetTeacher()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
        <test-method status="FAIL" signature="testGetTeacherFor()[pri:0, instance:com.model.dao.implementation.TeacherDAOImplTest@337d0578]" name="testGetTeacherFor" duration-ms="1" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.model.dao.implementation.TeacherDAOImpl.getTeacherFor(TeacherDAOImpl.java:53)
	at com.model.dao.implementation.TeacherDAOImplTest.testGetTeacherFor(TeacherDAOImplTest.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.unitils.UnitilsTestNG.run(UnitilsTestNG.java:103)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:652)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:352)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:347)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTeacherFor -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.TeacherDAOImplTest@337d0578]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.TeacherDAOImplTest.testGetTeacherFor()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.TeacherDAOImplTest@337d0578]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.TeacherDAOImplTest.testUpdate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="FAIL" signature="testUpdate()[pri:0, instance:com.model.dao.implementation.TeacherDAOImplTest@337d0578]" name="testUpdate" duration-ms="2" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [newName] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [newName] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:176)
	at org.testng.Assert.assertEquals(Assert.java:186)
	at com.model.dao.implementation.TeacherDAOImplTest.testUpdate(TeacherDAOImplTest.java:69)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.unitils.UnitilsTestNG.run(UnitilsTestNG.java:103)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:652)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:352)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:347)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdate -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.TeacherDAOImplTest@337d0578]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.TeacherDAOImplTest.testUpdate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
      </class> <!-- com.model.dao.implementation.TeacherDAOImplTest -->
      <class name="com.model.dao.implementation.SpecializationDAOImplTest">
        <test-method status="PASS" signature="unitilsBeforeClass()[pri:0, instance:com.model.dao.implementation.SpecializationDAOImplTest@6276ae34]" name="unitilsBeforeClass" is-config="true" duration-ms="75" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeClass -->
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.SpecializationDAOImplTest@6276ae34]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="6" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.SpecializationDAOImplTest.testGetAllSpecializations()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="PASS" signature="testGetAllSpecializations()[pri:0, instance:com.model.dao.implementation.SpecializationDAOImplTest@6276ae34]" name="testGetAllSpecializations" duration-ms="7" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllSpecializations -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.SpecializationDAOImplTest@6276ae34]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="1" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.SpecializationDAOImplTest.testGetAllSpecializations()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.SpecializationDAOImplTest@6276ae34]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="1" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.SpecializationDAOImplTest.testGetSpecializationFor()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="FAIL" signature="testGetSpecializationFor()[pri:0, instance:com.model.dao.implementation.SpecializationDAOImplTest@6276ae34]" name="testGetSpecializationFor" duration-ms="4" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [SPECIALIZATION_NAME] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [SPECIALIZATION_NAME] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:176)
	at org.testng.Assert.assertEquals(Assert.java:186)
	at com.model.dao.implementation.SpecializationDAOImplTest.testGetSpecializationFor(SpecializationDAOImplTest.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.unitils.UnitilsTestNG.run(UnitilsTestNG.java:103)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:652)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:352)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:347)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSpecializationFor -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.SpecializationDAOImplTest@6276ae34]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.SpecializationDAOImplTest.testGetSpecializationFor()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.SpecializationDAOImplTest@6276ae34]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.SpecializationDAOImplTest.testUpdateSpecializationName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="FAIL" signature="testUpdateSpecializationName()[pri:0, instance:com.model.dao.implementation.SpecializationDAOImplTest@6276ae34]" name="testUpdateSpecializationName" duration-ms="6" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at org.testng.Assert.assertFalse(Assert.java:73)
	at com.model.dao.implementation.SpecializationDAOImplTest.testUpdateSpecializationName(SpecializationDAOImplTest.java:69)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.unitils.UnitilsTestNG.run(UnitilsTestNG.java:103)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:652)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:352)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:347)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateSpecializationName -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.SpecializationDAOImplTest@6276ae34]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.SpecializationDAOImplTest.testUpdateSpecializationName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
      </class> <!-- com.model.dao.implementation.SpecializationDAOImplTest -->
      <class name="com.model.dao.implementation.MailDAOImplTest">
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.MailDAOImplTest@b97c004]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="1" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.MailDAOImplTest.testGetInboxEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="PASS" signature="unitilsBeforeClass()[pri:0, instance:com.model.dao.implementation.MailDAOImplTest@b97c004]" name="unitilsBeforeClass" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeClass -->
        <test-method status="PASS" signature="testGetInboxEmail()[pri:0, instance:com.model.dao.implementation.MailDAOImplTest@b97c004]" name="testGetInboxEmail" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetInboxEmail -->
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.MailDAOImplTest@b97c004]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.MailDAOImplTest.testGetSentEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.MailDAOImplTest@b97c004]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.MailDAOImplTest.testGetInboxEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
        <test-method status="PASS" signature="testGetSentEmail()[pri:0, instance:com.model.dao.implementation.MailDAOImplTest@b97c004]" name="testGetSentEmail" duration-ms="1" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSentEmail -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.MailDAOImplTest@b97c004]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.MailDAOImplTest.testGetSentEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
      </class> <!-- com.model.dao.implementation.MailDAOImplTest -->
      <class name="com.model.dao.implementation.StudentDAOImplTest">
        <test-method status="PASS" signature="unitilsBeforeClass()[pri:0, instance:com.model.dao.implementation.StudentDAOImplTest@39fb3ab6]" name="unitilsBeforeClass" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeClass -->
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.StudentDAOImplTest@39fb3ab6]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.StudentDAOImplTest.testDelete()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="FAIL" signature="testDelete()[pri:0, instance:com.model.dao.implementation.StudentDAOImplTest@39fb3ab6]" name="testDelete" duration-ms="2" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [null] but found [com.model.Student@1dd92fe2]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [null] but found [com.model.Student@1dd92fe2]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotSame(Assert.java:490)
	at org.testng.Assert.assertNull(Assert.java:426)
	at org.testng.Assert.assertNull(Assert.java:415)
	at com.model.dao.implementation.StudentDAOImplTest.testDelete(StudentDAOImplTest.java:119)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.unitils.UnitilsTestNG.run(UnitilsTestNG.java:103)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:652)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:352)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:347)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelete -->
        <test-method status="FAIL" signature="testEnrolledStudent()[pri:0, instance:com.model.dao.implementation.StudentDAOImplTest@39fb3ab6]" name="testEnrolledStudent" duration-ms="3" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [-1] but found [0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [-1] but found [0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:370)
	at org.testng.Assert.assertEquals(Assert.java:380)
	at com.model.dao.implementation.StudentDAOImplTest.testEnrolledStudent(StudentDAOImplTest.java:110)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.unitils.UnitilsTestNG.run(UnitilsTestNG.java:103)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:652)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:352)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:347)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnrolledStudent -->
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.StudentDAOImplTest@39fb3ab6]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.StudentDAOImplTest.testEnrolledStudent()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.StudentDAOImplTest@39fb3ab6]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.StudentDAOImplTest.testDelete()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.StudentDAOImplTest@39fb3ab6]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.StudentDAOImplTest.testGetEnrolledStudents()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="FAIL" signature="testGetEnrolledStudents()[pri:0, instance:com.model.dao.implementation.StudentDAOImplTest@39fb3ab6]" name="testGetEnrolledStudents" duration-ms="1" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at org.testng.Assert.assertFalse(Assert.java:73)
	at com.model.dao.implementation.StudentDAOImplTest.testGetEnrolledStudents(StudentDAOImplTest.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.unitils.UnitilsTestNG.run(UnitilsTestNG.java:103)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:652)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:352)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:347)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetEnrolledStudents -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.StudentDAOImplTest@39fb3ab6]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.StudentDAOImplTest.testEnrolledStudent()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.StudentDAOImplTest@39fb3ab6]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.StudentDAOImplTest.testGetEnrolledStudents()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.StudentDAOImplTest@39fb3ab6]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.StudentDAOImplTest.testGetStudent()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="PASS" signature="testGetStudent()[pri:0, instance:com.model.dao.implementation.StudentDAOImplTest@39fb3ab6]" name="testGetStudent" duration-ms="1" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetStudent -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.StudentDAOImplTest@39fb3ab6]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.StudentDAOImplTest.testGetStudent()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
        <test-method status="FAIL" signature="testGetWaitingStudents()[pri:0, instance:com.model.dao.implementation.StudentDAOImplTest@39fb3ab6]" name="testGetWaitingStudents" duration-ms="1" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at org.testng.Assert.assertFalse(Assert.java:73)
	at com.model.dao.implementation.StudentDAOImplTest.testGetWaitingStudents(StudentDAOImplTest.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.unitils.UnitilsTestNG.run(UnitilsTestNG.java:103)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:652)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:352)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:347)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetWaitingStudents -->
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.StudentDAOImplTest@39fb3ab6]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.StudentDAOImplTest.testGetWaitingStudents()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="FAIL" signature="testPendingStudent()[pri:0, instance:com.model.dao.implementation.StudentDAOImplTest@39fb3ab6]" name="testPendingStudent" duration-ms="2" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [-1] but found [0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [-1] but found [0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:370)
	at org.testng.Assert.assertEquals(Assert.java:380)
	at com.model.dao.implementation.StudentDAOImplTest.testPendingStudent(StudentDAOImplTest.java:97)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.unitils.UnitilsTestNG.run(UnitilsTestNG.java:103)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:652)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:352)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:347)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPendingStudent -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.StudentDAOImplTest@39fb3ab6]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.StudentDAOImplTest.testGetWaitingStudents()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.StudentDAOImplTest@39fb3ab6]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.StudentDAOImplTest.testPendingStudent()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.StudentDAOImplTest@39fb3ab6]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.StudentDAOImplTest.testPendingStudent()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.StudentDAOImplTest@39fb3ab6]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="1" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.StudentDAOImplTest.testRemoveFromCourse()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="FAIL" signature="testRemoveFromCourse()[pri:0, instance:com.model.dao.implementation.StudentDAOImplTest@39fb3ab6]" name="testRemoveFromCourse" duration-ms="3" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:370)
	at org.testng.Assert.assertEquals(Assert.java:380)
	at com.model.dao.implementation.StudentDAOImplTest.testRemoveFromCourse(StudentDAOImplTest.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.unitils.UnitilsTestNG.run(UnitilsTestNG.java:103)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:652)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:352)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:347)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFromCourse -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.StudentDAOImplTest@39fb3ab6]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="1" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.StudentDAOImplTest.testRemoveFromCourse()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
        <test-method status="FAIL" signature="testUpdate()[pri:0, instance:com.model.dao.implementation.StudentDAOImplTest@39fb3ab6]" name="testUpdate" duration-ms="2" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.model.dao.implementation.StudentDAOImpl.update(StudentDAOImpl.java:187)
	at com.model.dao.implementation.StudentDAOImplTest.testUpdate(StudentDAOImplTest.java:69)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.unitils.UnitilsTestNG.run(UnitilsTestNG.java:103)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:652)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:352)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:347)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdate -->
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.StudentDAOImplTest@39fb3ab6]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.StudentDAOImplTest.testUpdate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.StudentDAOImplTest@39fb3ab6]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.StudentDAOImplTest.testUpdate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
      </class> <!-- com.model.dao.implementation.StudentDAOImplTest -->
      <class name="com.model.dao.implementation.AssignmentDAOImplTest">
        <test-method status="PASS" signature="unitilsBeforeClass()[pri:0, instance:com.model.dao.implementation.AssignmentDAOImplTest@59e84876]" name="unitilsBeforeClass" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeClass -->
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.AssignmentDAOImplTest@59e84876]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="1" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.AssignmentDAOImplTest.testGetAssignmentsForCourse()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="PASS" signature="testGetAssignmentsForCourse()[pri:0, instance:com.model.dao.implementation.AssignmentDAOImplTest@59e84876]" name="testGetAssignmentsForCourse" duration-ms="6" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAssignmentsForCourse -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.AssignmentDAOImplTest@59e84876]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.AssignmentDAOImplTest.testGetAssignmentsForCourse()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
      </class> <!-- com.model.dao.implementation.AssignmentDAOImplTest -->
      <class name="com.model.dao.implementation.CourseDAOImplTest">
        <test-method status="PASS" signature="unitilsBeforeClass()[pri:0, instance:com.model.dao.implementation.CourseDAOImplTest@234bef66]" name="unitilsBeforeClass" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeClass -->
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.CourseDAOImplTest@234bef66]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="1" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.CourseDAOImplTest.testGetAllCourses()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="PASS" signature="testGetAllCourses()[pri:0, instance:com.model.dao.implementation.CourseDAOImplTest@234bef66]" name="testGetAllCourses" duration-ms="1" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllCourses -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.CourseDAOImplTest@234bef66]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.CourseDAOImplTest.testGetAllCourses()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.CourseDAOImplTest@234bef66]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.CourseDAOImplTest.testGetAllCoursesContaining()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="PASS" signature="testGetAllCoursesContaining()[pri:0, instance:com.model.dao.implementation.CourseDAOImplTest@234bef66]" name="testGetAllCoursesContaining" duration-ms="1" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllCoursesContaining -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.CourseDAOImplTest@234bef66]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.CourseDAOImplTest.testGetAllCoursesContaining()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.CourseDAOImplTest@234bef66]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.CourseDAOImplTest.testGetCoursesForTeacher()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="PASS" signature="testGetCoursesForTeacher()[pri:0, instance:com.model.dao.implementation.CourseDAOImplTest@234bef66]" name="testGetCoursesForTeacher" duration-ms="1" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCoursesForTeacher -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.CourseDAOImplTest@234bef66]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.CourseDAOImplTest.testGetCoursesForTeacher()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.CourseDAOImplTest@234bef66]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.CourseDAOImplTest.testGetEnrolledCourses()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="FAIL" signature="testGetEnrolledCourses()[pri:0, instance:com.model.dao.implementation.CourseDAOImplTest@234bef66]" name="testGetEnrolledCourses" duration-ms="1" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at org.testng.Assert.assertFalse(Assert.java:73)
	at com.model.dao.implementation.CourseDAOImplTest.testGetEnrolledCourses(CourseDAOImplTest.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.unitils.UnitilsTestNG.run(UnitilsTestNG.java:103)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:652)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:352)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:347)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetEnrolledCourses -->
        <test-method status="FAIL" signature="testGetEnrolledCoursesContains()[pri:0, instance:com.model.dao.implementation.CourseDAOImplTest@234bef66]" name="testGetEnrolledCoursesContains" duration-ms="2" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at org.testng.Assert.assertFalse(Assert.java:73)
	at com.model.dao.implementation.CourseDAOImplTest.testGetEnrolledCoursesContains(CourseDAOImplTest.java:119)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.unitils.UnitilsTestNG.run(UnitilsTestNG.java:103)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:652)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:352)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:347)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetEnrolledCoursesContains -->
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.CourseDAOImplTest@234bef66]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.CourseDAOImplTest.testGetEnrolledCoursesContains()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.CourseDAOImplTest@234bef66]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.CourseDAOImplTest.testGetEnrolledCourses()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.CourseDAOImplTest@234bef66]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="2" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.CourseDAOImplTest.testGetEnrolledCoursesContains()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
        <test-method status="FAIL" signature="testGetNotEnrolledCourses()[pri:0, instance:com.model.dao.implementation.CourseDAOImplTest@234bef66]" name="testGetNotEnrolledCourses" duration-ms="8" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [3]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [3]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at com.model.dao.implementation.CourseDAOImplTest.testGetNotEnrolledCourses(CourseDAOImplTest.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.unitils.UnitilsTestNG.run(UnitilsTestNG.java:103)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:652)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:352)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:347)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNotEnrolledCourses -->
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.CourseDAOImplTest@234bef66]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.CourseDAOImplTest.testGetNotEnrolledCourses()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="PASS" signature="testGetNotEnrolledCoursesContains()[pri:0, instance:com.model.dao.implementation.CourseDAOImplTest@234bef66]" name="testGetNotEnrolledCoursesContains" duration-ms="2" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNotEnrolledCoursesContains -->
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.CourseDAOImplTest@234bef66]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.CourseDAOImplTest.testGetNotEnrolledCoursesContains()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.CourseDAOImplTest@234bef66]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.CourseDAOImplTest.testGetNotEnrolledCourses()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.CourseDAOImplTest@234bef66]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="1" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.CourseDAOImplTest.testGetNotEnrolledCoursesContains()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
        <test-method status="FAIL" signature="testGetPendingCourses()[pri:0, instance:com.model.dao.implementation.CourseDAOImplTest@234bef66]" name="testGetPendingCourses" duration-ms="1" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at org.testng.Assert.assertFalse(Assert.java:73)
	at com.model.dao.implementation.CourseDAOImplTest.testGetPendingCourses(CourseDAOImplTest.java:95)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.unitils.UnitilsTestNG.run(UnitilsTestNG.java:103)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:652)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:352)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:347)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPendingCourses -->
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.CourseDAOImplTest@234bef66]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.CourseDAOImplTest.testGetPendingCourses()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.CourseDAOImplTest@234bef66]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="1" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.CourseDAOImplTest.testGetPendingCoursesContains()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.CourseDAOImplTest@234bef66]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.CourseDAOImplTest.testGetPendingCourses()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
        <test-method status="FAIL" signature="testGetPendingCoursesContains()[pri:0, instance:com.model.dao.implementation.CourseDAOImplTest@234bef66]" name="testGetPendingCoursesContains" duration-ms="1" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at org.testng.Assert.assertFalse(Assert.java:73)
	at com.model.dao.implementation.CourseDAOImplTest.testGetPendingCoursesContains(CourseDAOImplTest.java:107)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.unitils.UnitilsTestNG.run(UnitilsTestNG.java:103)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:652)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:352)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:347)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPendingCoursesContains -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.CourseDAOImplTest@234bef66]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.CourseDAOImplTest.testGetPendingCoursesContains()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
        <test-method status="PASS" signature="unitilsBeforeTestSetUp(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.CourseDAOImplTest@234bef66]" name="unitilsBeforeTestSetUp" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.CourseDAOImplTest.testUpdateCourse()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsBeforeTestSetUp -->
        <test-method status="PASS" signature="testUpdateCourse()[pri:0, instance:com.model.dao.implementation.CourseDAOImplTest@234bef66]" name="testUpdateCourse" duration-ms="6" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateCourse -->
        <test-method status="PASS" signature="unitilsAfterTestTearDown(java.lang.reflect.Method)[pri:0, instance:com.model.dao.implementation.CourseDAOImplTest@234bef66]" name="unitilsAfterTestTearDown" is-config="true" duration-ms="0" started-at="2018-05-25T10:33:47Z" finished-at="2018-05-25T10:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.model.dao.implementation.CourseDAOImplTest.testUpdateCourse()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitilsAfterTestTearDown -->
      </class> <!-- com.model.dao.implementation.CourseDAOImplTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
